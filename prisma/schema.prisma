generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  password     String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Transfer      Transfer[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model VerificationRequest {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Transfer {
  id                       String       @id @default(auto()) @map("_id") @db.ObjectId
  file_storage_key         String       @unique
  transfer_title           String
  transfer_message         String?
  transfer_display_name    String
  transfer_mode            TransferMode @default(MANUAL_SEND)
  file_size                Int
  file_type                String
  file_extension           String
  file_is_password_enabled Boolean      @default(false)
  file_password            String?
  recipient_email          String?
  user                     User?        @relation(fields: [user_id], references: [id])
  user_id                  String?      @db.ObjectId
  total_files              Int          @default(0)
  max_downloads            Int?         @default(-1)
  expiration_date          DateTime?
  created_at               DateTime     @default(now())
  updated_at               DateTime     @updatedAt
}

enum TransferMode {
  EMAIL_SEND
  MANUAL_SEND
}
